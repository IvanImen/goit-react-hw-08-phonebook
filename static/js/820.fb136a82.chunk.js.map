{"version":3,"file":"static/js/820.fb136a82.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactsListItem/ContactsListItem.styled.jsx","components/ContactsListItem/ContactsListItem.jsx","components/Loader/Loader.jsx","components/Contacts/ContactsWrapper.jsx","Pages/Contacts.jsx","components/ContactForm/ContactForm.styled.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { BtnStyled, FormStyled, InputStyled } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactAction, selectContacts } from 'store/phonebookSlice';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value.trim());\n        break;\n      case 'number':\n        setNumber(value.trim());\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  const addContact = (name, number) => {\n    const isPresent = contacts.find(contact => contact.name === name);\n\n    if (isPresent) {\n      alert(`${name} is already in the phonebook`);\n      return;\n    }\n\n    dispatch(addContactAction({ name, number }));\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <InputStyled\n        type=\"text\"\n        name=\"name\"\n        onChange={handleChange}\n        value={name}\n        required\n        placeholder=\"Enter contact name\"\n      />\n      <InputStyled\n        type=\"tel\"\n        name=\"number\"\n        onChange={handleChange}\n        value={number}\n        required\n        placeholder=\"Enter contact phone\"\n      />\n      <BtnStyled type=\"submit\">Add contact</BtnStyled>\n    </FormStyled>\n  );\n};\n","import { InputStyled } from 'components/ContactForm/ContactForm.styled';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter, setFilterAction } from 'store/phonebookSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(selectFilter);\n\n  const handleFilterChange = e => {\n    dispatch(setFilterAction(e.target.value.trim().toLowerCase()));\n  };\n\n  return (\n    <InputStyled\n      placeholder=\"Filter contact numbers\"\n      type=\"text\"\n      name=\"filter\"\n      onChange={handleFilterChange}\n      value={filter}\n    />\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { ContactsListItem } from 'components';\nimport React, { useEffect } from 'react';\nimport { ListStyled } from './ContactsList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getContactsAction,\n  selectFilteredContacts,\n} from 'store/phonebookSlice';\n\nexport const ContactsList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    dispatch(getContactsAction());\n  }, [dispatch]);\n\n  return (\n    <ListStyled>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <ContactsListItem key={id} name={name} number={number} id={id} />\n        );\n      })}\n    </ListStyled>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const ItemStyled = styled.li`\n  background-color: rgba(142, 142, 142, 0.5);\n  padding: 12px 32px;\n  display: flex;\n  align-items: center;\n  &:hover,\n  &:focus {\n    background-color: rgba(183, 183, 183, 0.5);\n  }\n`;\n\nexport const DivStyled = styled.div`\n  margin-left: 20px;\n`;\n\nexport const SubtitleStyled = styled.h3`\n  color: #ffffff;\n  font-size: 24px;\n  font-weight: 700;\n`;\n\nexport const TextStyled = styled.p`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 500;\n  margin-top: 12px;\n`;\n\nexport const LinkStyled = styled.button`\n  background-color: transparent;\n  border: none;\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 400;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  margin-left: auto;\n  &:hover,\n  &:focus {\n    color: rgba(255, 46, 0, 0.7);\n    fill: rgba(255, 46, 0, 0.7);\n  }\n`;\n","import React from 'react';\nimport {\n  DivStyled,\n  ItemStyled,\n  LinkStyled,\n  SubtitleStyled,\n  TextStyled,\n} from './ContactsListItem.styled';\nimport { FiPhone } from 'react-icons/fi';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactAction } from 'store/phonebookSlice';\n\nexport const ContactsListItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const deleteContact = id => {\n    dispatch(deleteContactAction(id));\n  };\n\n  return (\n    <ItemStyled>\n      <FiPhone color=\"#ffffff\" size=\"32px\" title=\"phone icon\" />\n      <DivStyled>\n        <SubtitleStyled>{name} </SubtitleStyled>\n        <TextStyled>{number}</TextStyled>\n      </DivStyled>\n      <LinkStyled type=\"button\" onClick={() => deleteContact(id)}>\n        <RiDeleteBin5Line />\n        Delete\n      </LinkStyled>\n    </ItemStyled>\n  );\n};\n","import { Grid } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <Grid\n        color=\"#ffffff\"\n        height={80}\n        width={80}\n        wrapperStyle={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n        }}\n      />\n      t\n    </>\n  );\n};\n","import { ContactsList } from 'components';\nimport { ErrorStyled } from 'components/App/AppStyled';\nimport { Loader } from 'components/Loader/Loader';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'store/phonebookSlice';\n\nexport const ContactsWrapper = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <>\n      {selectIsLoading && <Loader />}\n      {error && <ErrorStyled>{error}</ErrorStyled>}\n      <ContactsList />\n    </>\n  );\n};\n","import { ContactForm, Filter } from 'components';\nimport { TitleStyled } from 'components/App/AppStyled';\nimport { ContactsWrapper } from 'components/Contacts/ContactsWrapper';\nimport React from 'react';\n\nconst Contacts = props => {\n  return (\n    <>\n      <TitleStyled>Phonebook</TitleStyled>\n      <ContactForm />\n      <TitleStyled>Contacts</TitleStyled>\n      <Filter />\n      <ContactsWrapper />\n    </>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const FormStyled = styled.form``;\n\nexport const InputStyled = styled.input`\n  background-color: rgba(142, 142, 142, 0.5);\n  border: none;\n  display: block;\n  width: 100%;\n  margin-bottom: 20px;\n  height: 60px;\n  outline: none;\n  font-size: 24px;\n  font-weight: 400;\n  color: rgba(225, 225, 225, 0.8);\n  padding: 0 32px;\n  &:focus {\n    background-color: rgba(183, 183, 183, 0.5);\n  }\n  &::placeholder {\n    font-size: 24px;\n    font-weight: 500;\n    color: rgba(225, 225, 225, 0.4);\n  }\n`;\n\nexport const BtnStyled = styled.button`\n  border: none;\n  padding: 12px 32px;\n  outline: none;\n  font-size: 24px;\n  font-weight: 400;\n  background-color: rgba(183, 183, 183, 0.6);\n  color: rgba(225, 225, 225, 0.8);\n  margin-bottom: 32px;\n  &:focus,\n  &:hover {\n    color: #ffffff;\n    background-color: rgba(200, 200, 200, 0.6);\n  }\n`;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","selectContacts","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","e","_e$target","target","value","trim","addContact","find","contact","alert","concat","addContactAction","_jsxs","FormStyled","onSubmit","preventDefault","children","_jsx","InputStyled","type","onChange","required","placeholder","BtnStyled","Filter","filter","selectFilter","setFilterAction","toLowerCase","ListStyled","styled","_templateObject","_taggedTemplateLiteral","ContactsList","filteredContacts","selectFilteredContacts","useEffect","getContactsAction","map","_ref","id","ContactsListItem","ItemStyled","DivStyled","_templateObject2","SubtitleStyled","_templateObject3","TextStyled","_templateObject4","LinkStyled","_templateObject5","FiPhone","color","size","title","onClick","deleteContactAction","deleteContact","RiDeleteBin5Line","Loader","_Fragment","Grid","height","width","wrapperStyle","position","top","left","transform","ContactsWrapper","error","selectError","selectIsLoading","ErrorStyled","props","TitleStyled"],"sourceRoot":""}